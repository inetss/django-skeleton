#!/usr/bin/env bash

MANAGE_SCRIPT=${MANAGE_SCRIPT:-src/manage.py}
VENV_PATH=${VENV_PATH:-var/venv}

if [ -z "$*" ]; then
	cat >&2 <<END
Commands:

install               - install packages from requirements.txt (creates virtualenv at ${VENV_PATH} on first invocation)
virtualenv            - open shell inside virtualenv
virtualenv <command>  - run <command> inside virtualenv (e.g. $0 virtualenv pip install foo)

Anything else is passed to ${MANAGE_SCRIPT}, e.g.:

runserver             - run development server
migrate               - apply migrations
END
	exit 1
fi

set -e

die() { >&2 echo -e $@; exit 1; }

cd $(dirname $(cd ${0%/*} && echo $PWD/${0##*/}))  # cd to own directory

if [ ! -f "$VENV_PATH/bin/activate" ]; then
	python=$($(cat "$MANAGE_SCRIPT" | head -n 1 | tail -c +3) -c 'import sys; print(sys.executable)')
	[ -x "$python" ] || die "Could not discover Python interpreter from $MANAGE_SCRIPT shebang"
	virtualenv --python="$python" "$VENV_PATH" || die "Failed to initialize virtualenv at $VENV_PATH"
fi

. "$VENV_PATH/bin/activate" || die "Failed to activate virtualenv at $VENV_PATH"

case "$1" in
install)
	pip install --disable-pip-version-check -r requirements.txt
	;;
virtualenv)
	shift
	if [ -z "$*" ]; then
		"$SHELL"
	else
		"$@"
	fi
	;;
*)
	"$MANAGE_SCRIPT" "$@"
	;;
esac
